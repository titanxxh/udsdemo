syntax = "proto3";

package subpub;

// Interface exported by the server.
service Streaming {
    // A simple RPC.
    rpc GetOne (ClientMessage) returns (ServerMessage) {
    }

    // A server-to-client streaming RPC.
    rpc Watch (ClientMessage) returns (stream ServerMessage) {
    }

    // A client-to-server streaming RPC.
    rpc PutAll (stream ClientMessage) returns (ServerMessage) {
    }

    // A Bidirectional streaming RPC.
    rpc Chat (stream ClientMessage) returns (stream ServerMessage) {
    }
}

message Header {
    uint64 id = 1;
    int32 generation = 2;
    int32 from = 3;
    int32 to = 4;
}

message UniMessage {
    Header header = 1;
    int32 payload_type = 2;
    bytes payload = 3;
}

message ClientMessage {
    Header header = 1;
    int32 payload_type = 2;
    bytes payload = 3;
}

message ServerMessage {
    Header header = 1;
    int32 payload_type = 2;
    bytes payload = 3;
}